user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
	worker_connections 768;
	# multi_accept on;
}

http {
	sendfile on;
	tcp_nopush on;
	types_hash_max_size 2048;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	server_tokens off;

	ssl_protocols TLSv1.3; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	log_format sslparams '$ssl_protocol $ssl_cipher';

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	gzip on;

	# custom section
	client_header_buffer_size 1k;
	client_header_timeout 15s;

	client_body_buffer_size 16k;
	client_body_timeout 20s;
	client_max_body_size 500k;

	# custom headers
	add_header Strict-Transport-Security "max-age=31536000; includeSubdomains; preload" always;
	add_header X-XSS-Protection "1;mode=block";
	add_header X-Content-Type-Options nosniff;
	add_header Permissions-Policy "accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()" always;
	add_header X-Frame-Options "SAMEORIGIN";

	# COOP, COEP, CORP, CORS
	# Update configuration to your needs
	add_header Access-Control-Allow-Origin "https://my.page";
	add_header Cross-Origin-Resource-Policy "same-origin";
	add_header Cross-Origin-Embedder-Policy "require-corp";
	add_header Cross-Origin-Opener-Policy "same-origin";

	# Set default CSP here
	# Note: If you have CSP directives specified both in a Content-Security-Policy HTTP header 
	# and in a <meta>-element, the browser uses the most-restrictive CSP directives, wherever specified
	# You should probably fine-grain in server > location blockr and via site/webapp-specific meta-tags (e.g. with nonces)
	add_header Content-Security-Policy "default-src 'self'";
	add_header Referrer-Policy same-origin;

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-available/*;
}
